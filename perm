#!/bin/bash

# Perm - A bash tool to abreviate recursive chmod and chown commands.
# It can do recursive chmod and chown commands to a valid(s) user and its file(s)/folder(s).

# Github: https://github.com/mayconmesquita/perm

VERSION='1.0.0'

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

BOLD=$(tput bold)
NORMAL=$(tput sgr0)

ERROR="${RED}${BOLD} [✗ Error]"
SUCCESS="${GREEN}${BOLD} ✓"

perm=$1
owner=$2
file=$3

bin=$0
bin=${bin%.sh}
bin=${bin##*/}

function help(){
	printf "$GREEN Usage: \n"
	printf "$NC $ $bin [permission] [username] [(file) or (--all/-a)]\n\n"
	printf "$GREEN Examples: \n"
	printf "$NC $ $bin 777 root index.html\n"
	printf "$NC $ $bin 755 root --all\n"
	exit 0
}

# if first arg is set
if [[ -z "$1" || "$1" = 'help' || "$1" = '--help'  || "$1" = '-h' || "$1" = '-H' ]]; then 
	help
fi

# if first arg is set
if [[ -z "$1" || "$1" = 'version' || "$1" = '--ver'  || "$1" = '-v' || "$1" = '-V' ]]; then 
	printf "v$VERSION\n"
	exit 0
fi

# if perm is set
if [ -n "$perm" ]; then 
	# if perm is INT
	ret1='^[0-9]+$'
	if [[ !$perm =~ $ret1 ]] ; then 
		printf "$ERROR Not a valid permission number. $NC"
		exit 1
	else
		if [ -z "$file" ]; then 
			printf "$ERROR Filename is not set $NC\n"
			exit 1
		fi

		if [[ $file = '--all' || $file = '--ALL' || $file = '-a' || $file = '-A' ]];then 
			chmod -Rf $perm * # run command
			printf "$SUCCESS chmod -Rf $perm * $NC ${NORMAL}\n"
		else 
			chmod -Rf $perm $file # run command
			printf "$SUCCESS chmod -Rf $perm $file $NC ${NORMAL}\n"
		fi
	fi
fi

# if owner is set
if [ -n "$owner" ]; then 
	# if owner exists
	ret2=false
	getent passwd $owner >/dev/null 2>&1 && ret2=true

	if $ret2; then
		if [ -z "$file" ]; then 
			printf "$ERROR Filename is not set. $NC\n"
			exit 1
		fi

		if [[ $file = '--all' || $file = '--ALL' || $file = '-a' || $file = '-A' ]];then
			chown -Rf $owner:$owner * # run command
			printf "$SUCCESS chown -Rf $owner:$owner * $NC ${NORMAL}\n"
		else 
			chown -Rf $owner:$owner $file # run command
			printf "$SUCCESS chown -Rf $owner:$owner $file $NC ${NORMAL}\n"
		fi
	else
		printf "$ERROR Not a existing user. $NC\n"
		exit 1
	fi
fi
